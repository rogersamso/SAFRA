using JuMP, HiGHS

m = Model(optimizer_with_attributes(HiGHS.Optimizer))

const Z = 5 # integer number of members in the farm unit
const M = 0.09165 * 6.51802362847002 # cropping surface density
const D = 134.037344288403
const P = 1 - 0.55 * D / 365

### limits ###
@variable(m, 0 <= X01) # vegetables
@variable(m, 0 <= X02) # fresh fruits
@variable(m, 0 <= X03) # dried fruits
@variable(m, 0 <= X04) # irrigated wheat
@variable(m, 0 <= X05) # irrigated corn
@variable(m, 0 <= X06) # irrigated hemp
@variable(m, 0 <= X07) # irrigated beans
@variable(m, 0 <= X08) # wheat
@variable(m, 0 <= X09) # associated wheat
@variable(m, 0 <= X10) # corn
@variable(m, 0 <= X11) # rye and wheat mixture
@variable(m, 0 <= X12) # barley
@variable(m, 0 <= X13) # fodder
@variable(m, 0 <= X14) # potatoes
@variable(m, 0 <= X15) # beans
@variable(m, 0 <= X16) # vetches
@variable(m, 0 <= X17) # lupines
@variable(m, 0 <= X18) # olives
@variable(m, 0 <= X19) # vines
@variable(m, 0 <= X20) # fallow
@variable(m, 0 <= X21) # pasture
@variable(m, 0 <= X22) # forest

@variable(m, 0 <= X23) # X04 SQ1
@variable(m, 0 <= X24) # X04 SQ2
@variable(m, 0 <= X25) # X04 SQ3
@variable(m, 0 <= X26) # X08 SQ1
@variable(m, 0 <= X27) # X08 SQ2
@variable(m, 0 <= X28) # X11 SQ2
@variable(m, 0 <= X29) # X11 SQ3
@variable(m, 0 <= X30) # X18 SQ1
@variable(m, 0 <= X31) # X18 SQ2
@variable(m, 0 <= X32) # X18 SQ3
@variable(m, 0 <= X33) # X19 SQ1
@variable(m, 0 <= X34) # X19 SQ2
@variable(m, 0 <= X35) # X19 SQ3
@variable(m, 0 <= X36) # X22 SQ1
@variable(m, 0 <= X37) # X22 SQ2
@variable(m, 0 <= X38) # X22 SQ3
@variable(m, 0 <= X39)
@variable(m, 0 <= X40)
@variable(m, 0 <= X41)


@variable(m, 0 <= X42)
@variable(m, 0 <= X43)
@variable(m, 0 <= X44)
@variable(m, 0 <= X45)
@variable(m, 0 <= X46)
@variable(m, 0 <= X47)
@variable(m, 0 <= X48)
@variable(m, 0 <= X49)
@variable(m, 0 <= X50)
@variable(m, 0 <= X51)
@variable(m, 0 <= X52)
@variable(m, 0 <= X53)
@variable(m, 0 <= X54)
@variable(m, 0 <= X55)
@variable(m, 0 <= X56)
@variable(m, 0 <= X57)
@variable(m, 0 <= X58)
@variable(m, 0 <= X59)
@variable(m, 0 <= X60)
@variable(m, 0 <= X61)
@variable(m, 0 <= X62)
@variable(m, 0 <= X63)
@variable(m, 0 <= X64)
@variable(m, 0 <= X65)
@variable(m, 0 <= X66)
@variable(m, 0 <= X67)
@variable(m, 0 <= X68)
@variable(m, 0 <= X69)
@variable(m, 0 <= X70)
@variable(m, 0 <= X71)
@variable(m, 0 <= X72)
@variable(m, 0 <= X73)
@variable(m, 0 <= X74)
@variable(m, 0 <= X75)
@variable(m, 0 <= X76)
@variable(m, 0 <= X77)
@variable(m, 0 <= X78)
@variable(m, 0 <= X79)
@variable(m, 0 <= X80)
@variable(m, 0 <= X81)
@variable(m, 0 <= X82)
@variable(m, 0 <= X83)
@variable(m, 0 <= X84)
@variable(m, 0 <= X85)
@variable(m, 0 <= X86)
@variable(m, 0 <= X87)
@variable(m, 0 <= X88)
@variable(m, 0 <= X89)
@variable(m, 0 <= X90)
@variable(m, 0 <= X91)
@variable(m, 0 <= X92)
@variable(m, 0 <= X93)
@variable(m, 0 <= X94)
@variable(m, 0 <= X95)
@variable(m, 0 <= X96)
@variable(m, 0 <= X97)
@variable(m, 0 <= X98)
@variable(m, 0 <= X99)
@variable(m, 0 <= X100)
@variable(m, 0 <= X101)
@variable(m, 0 <= X102)
@variable(m, 0 <= X103)
@variable(m, 0 <= X104)
@variable(m, 0 <= X105)
@variable(m, 0 <= X106)
@variable(m, 0 <= X107)
@variable(m, 0 <= X108)
@variable(m, 0 <= X109)
@variable(m, 0 <= X110)
@variable(m, 0 <= X111)
@variable(m, 0 <= X112)
@variable(m, 0 <= X113)
@variable(m, 0 <= X114)
@variable(m, 0 <= X115)
@variable(m, 0 <= X116)
@variable(m, 0 <= X117)
@variable(m, 0 <= X118)
@variable(m, 0 <= X119)
@variable(m, 0 <= X120)
@variable(m, 0 <= X121)
@variable(m, 0 <= X122)
@variable(m, 0 <= X123)
@variable(m, 0 <= X124)
@variable(m, 0 <= X125)
@variable(m, 0 <= X126)
@variable(m, 0 <= X127)
@variable(m, 0 <= X128)
@variable(m, 0 <= X129)
@variable(m, 0 <= X130)
@variable(m, 0 <= X131)
@variable(m, 0 <= X132)
@variable(m, 0 <= X133)
@variable(m, 0 <= X134)
@variable(m, 0 <= X135)
@variable(m, 0 <= X136)
@variable(m, 0 <= X137)
@variable(m, 0 <= X138)
@variable(m, 0 <= X139)
@variable(m, 0 <= X140)
@variable(m, 0 <= X141)
@variable(m, 0 <= X142)
@variable(m, 0 <= X143)
@variable(m, 0 <= X144)
@variable(m, 0 <= X145)
@variable(m, 0 <= X146)
@variable(m, 0 <= X147)
@variable(m, 0 <= X148)
@variable(m, 0 <= X149)
@variable(m, 0 <= X150)
@variable(m, 0 <= X151)
@variable(m, 0 <= X152) # X14
@variable(m, 0 <= X153) # X14
@variable(m, 0 <= X154) # X14


# @objective(m, Min, X01 + X02 + X03 + X04 + X06 + X08 + X29 + X13 + X15 + X16 + X18 + X19 + X21 + X22) # Minimum Reproduction Unit (land-saving)
# @objective(m, Min, 1044.6*X01+365.5*(X02+X03)+361.85*X04+360.38*X05+1513.17*X06+291.67*X07+365.5*X08+372.81*X09+361.85*X10+353.07*X11+351.61*X12+365.5*X13+557.75*X14+300.45*X15+277.78*X16+358.19*X17+593.57*X18+304.83*X19+79.68*(X22)+7.31*X21+(4.87*(X26-X100-X101)+3.79*(X27-X102-X103)+2.04*(X09-X104-X105)+2.09*(X28-X106-X107)+3.79*(X29-X108-X109)+3.02*X113+2.45*X115+1.89*X117+1.89*X119+1.70*X121+1.70*X123+1.39*X125+3.59*X133+4.34*(X136+X137)+12.09*(X139+X140+X141)+9.07*(X143+X144+X145)+6.05*(X147+X148+X149)+2.22*X19+1.45*X22)*7.31+2.98*P*M+0.42*M+0.61*Z+259.51*M+40.74*Z) # Peasant Reproduction Unit (labour-saving)
@objective(m, Max, X19) # Maximum Sustainable Specialization (commercial-maximization)

#### restrictions for quality ####
@constraint(m, X23 + X24 + X25 - X04 == 0)
@constraint(m, X26 + X27 - X08 == 0)
@constraint(m, X28 + X29 - X11 == 0)
@constraint(m, X152 + X153 + X154 - X14 == 0)
@constraint(m, X30 + X31 + X32 - X18 == 0)
@constraint(m, X33 + X34 + X35 - X19 == 0)
@constraint(m, X36 + X37 + X38 - X22 == 0)

# quality 1
@constraint(
    m,
    X01 +
    X02 +
    X03 +
    2 * X23 +
    X26 +
    X09 +
    X152 +
    X154 +
    X15 +
    X33 +
    X36 +
    -2055 / 12037 * (
        X01 +
        X02 +
        X03 +
        X04 +
        X06 +
        X08 +
        X09 +
        X10 +
        X11 +
        X12 +
        X13 +
        X14 +
        X15 +
        X16 +
        X17 +
        X19 +
        X21 +
        X22
    ) <= 0
)

# quality 2
@constraint(
    m,
    2 * X24 + X27 + X10 + X29 + X13 + X153 + X34 + X37 -
    3401 / 12037 * (
        X01 +
        X02 +
        X03 +
        X04 +
        X06 +
        X08 +
        X09 +
        X10 +
        X11 +
        X12 +
        X13 +
        X14 +
        X15 +
        X16 +
        X17 +
        X19 +
        X21 +
        X22
    ) <= 0
)

#### restrictions for irrigated fallow ###
@constraint(m, X04 - X06 == 0)
@constraint(m, X05 - 0.5 * X04 == 0)
@constraint(m, X07 - 0.5 * X06 == 0)
@constraint(m, X20 - X04 == 0)

#### restrictions for dry herbaceous fallow ###
@constraint(m, X15 - 0.5 * X26 == 0)
@constraint(m, X152 - 0.5 * X26 == 0)
@constraint(m, X13 - 0.5 * X27 == 0)
@constraint(m, X153 - 0.5 * X27 == 0)
@constraint(m, X16 - X29 == 0)

#### restrictions for olive groves fallow ###
@constraint(m, X09 - 0.5 * X30 == 0)
@constraint(m, X154 - 0.5 * X30 == 0)
@constraint(m, X10 - 0.5 * X31 == 0)
@constraint(m, X28 - 0.5 * X31 == 0)
@constraint(m, X12 - 0.5 * X32 == 0)
@constraint(m, X17 - 0.5 * X32 == 0)

#### restrictions for general livestock feeding ###
@constraint(m, X39 + X40 + X41 == 1)
@constraint(m, X42 + X43 + X44 - X01 == 0)
@constraint(m, X45 + X46 + X47 + X48 - X12 <= 0)
@constraint(m, X49 + X50 + X51 + X52 - 0.5 * X23 <= 0)
@constraint(m, X53 + X54 + X55 + X56 - 0.5 * X24 <= 0)
@constraint(m, X57 + X58 + X59 + X60 - 0.5 * X25 <= 0)
@constraint(m, X61 + X62 + X63 + X64 - X10 <= 0)
@constraint(m, X65 + X66 + X67 - X13 <= 0)
@constraint(m, X68 + X69 + X70 + X71 - 0.5 * X23 <= 0)
@constraint(m, X72 + X73 + X74 + X75 - 0.5 * X24 <= 0)
@constraint(m, X76 + X77 + X78 + X79 - 0.5 * X25 <= 0)
@constraint(m, X80 + X81 + X82 + X83 - X15 <= 0)
@constraint(m, X84 + X85 + X86 - X16 <= 0)
@constraint(m, X87 + X88 + X89 - X17 <= 0)
@constraint(m, X90 + X91 - X21 == 0)
@constraint(m, X92 + X93 - X22 <= 0)
@constraint(m, X94 + X95 - X23 <= 0)
@constraint(m, X96 + X97 - X24 <= 0)
@constraint(m, X98 + X99 - X25 <= 0)
@constraint(m, X100 + X101 - X26 <= 0)
@constraint(m, X102 + X103 - X27 <= 0)
@constraint(m, X104 + X105 - X09 <= 0)
@constraint(m, X106 + X107 - X28 <= 0)
@constraint(m, X108 + X109 - X29 <= 0)
@constraint(m, X110 + X111 - X12 <= 0)
@constraint(m, X112 + X113 - 0.5 * X23 <= 0)
@constraint(m, X114 + X115 - 0.5 * X24 <= 0)
@constraint(m, X116 + X117 - 0.5 * X25 <= 0)
@constraint(m, X118 + X119 - X15 <= 0)
@constraint(m, X120 + X121 - X16 <= 0)
@constraint(m, X122 + X123 - X17 <= 0)

#### restrictions for specific livestock feeding ###
#pigs
@constraint(m, 13530.28 * X67 - 0.15 * 1481.85 * Z <= 0)

#pigs
@constraint(
    m,
    1627.75 * X22 +
    13530.28 * X67 +
    4171.80 * X30 +
    2571.63 * X31 +
    1800.19 * X32 +
    1111.33 * X33 +
    873.19 * X34 +
    476.28 * X35 +
    97.07 * Z * X39 +
    4459.18 * X42 +
    4833.66 * X48 +
    16442.95 * X52 +
    13112.89 * X56 +
    9782.82 * X60 +
    6111.21 * X64 - 1481.85 * Z == 0
)

# hens and chikens
@constraint(
    m,
    77.66 * Z * X40 +
    2182.87 * X43 +
    4422.96 * X45 +
    15424.36 * X49 +
    12300.58 * X53 +
    9176.81 * X57 +
    5732.64 * X61 +
    9967.88 * X68 +
    7887.38 * X72 +
    5917.85 * X76 +
    6084.29 * X80 +
    4882.22 * X84 +
    5091.09 * X87 - 381.85 * Z == 0
)

# rabbits
@constraint(
    m,
    116.48 * Z * X41 +
    4548.36 * X44 +
    4896.84 * X46 +
    15278.85 * X50 +
    12184.54 * X54 +
    9090.23 * X58 +
    5678.56 * X62 +
    11693.09 * X69 +
    9252.51 * X73 +
    6942.09 * X77 +
    7137.34 * X81 +
    5717.02 * X85 +
    5972.24 * X88 - 62.89 * Z == 0
)

# sheep
@constraint(m, 10761.32 * X66 - 0.35 * 957.24 * Z <= 0)
# sheep
@constraint(m, 13493 * X90 + 5206.25 * X92 + 10761.32 * X66 - 957.24 * Z == 0)
# mules
@constraint(m, (9162.10 * X91 + 3535.31 * X93) * 365 / (19076.26 * M) <= 365)
# mules
@constraint(m, 10760.93 * X65 - 0.45 * 19076.26 * M <= 0)

# mules
@constraint(
    m,
    7485.30 * X94 +
    6303.43 * X96 +
    4727.57 * X98 +
    7091.35 * X100 +
    5515.62 * X102 +
    4581.98 * X104 +
    3045.95 * X106 +
    4188.85 * X108 +
    3301.68 * X110 - 0.25 * 19076.26 * M <= 0
)

# mules
@constraint(
    m,
    9162 * X91 +
    3535.31 * X93 +
    10769.93 * X65 +
    5212.77 * X47 +
    16782.48 * X51 +
    13383.65 * X55 +
    9984.43 * X59 +
    6237.41 * X63 +
    11961.45 * X70 +
    9464.86 * X74 +
    7101.42 * X78 +
    7301.15 * X82 +
    5848.23 * X86 +
    6109.31 * X89 +
    7485.30 * X94 +
    6303.43 * X96 +
    4707.57 * X98 +
    7091.35 * X100 +
    5515.62 * X102 +
    4581.98 * X104 +
    3045.95 * X106 +
    4188.85 * X108 +
    3301.68 * X110 +
    8169.84 * X112 +
    6641.92 * X114 +
    5109.17 * X116 +
    5109.17 * X118 +
    4598.25 * X120 +
    4598.25 * X122 - 19076.26 * M == 0
)

# stall bedding
@constraint(
    m,
    2889 * X95 +
    2433 * X97 +
    1825 * X99 +
    2737 * X101 +
    2129 * X103 +
    1521 * X105 +
    1176 * X107 +
    1617 * X109 +
    1096 * X111 +
    2521 * X23 +
    2189 * X24 +
    1858 * X25 +
    783 * X10 - 730 * M - 139.95 * Z == 0
)

#### restrictions for general fertilitzation ###
@constraint(m, X126 + X127 + X128 == 1)
@constraint(m, X129 + X130 + X131 + X132 == 1)
@constraint(m, X133 + X134 - X18 == 0)
@constraint(m, X135 + X136 + X137 - X19 == 0)
@constraint(m, X138 + X139 + X140 + X141 - X36 == 0)
@constraint(m, X142 + X143 + X144 + X145 - X37 == 0)
@constraint(m, X146 + X147 + X148 + X149 - X38 == 0)

#### restrictions for specific fertilitzation ###
# N crops and orchards
@constraint(m, 51 * X01 + 8.35 * X02 + 26.63 * X03 - 4.42 * X126 * Z <= 0)
# P crops and orchards
@constraint(m, 3.42 * X01 - 2.07 * X02 + 0.23 * X03 - 1.98 * X126 * Z <= 0)
# K crops and orchards
@constraint(m, 11.43 * X01 - 4.88 * X02 + 2.97 * X03 - 1.33 * X126 * Z <= 0)
# N irrigation
@constraint(
    m,
    90.43 * X23 + 76.23 * X24 + 59.30 * X25 - 4.42 * Z * X127 - 18.39 * P * M * X129 -
    2.60 * M * X129 - 3.78 * Z * X129 - 3.91 * X136 <= 0
)
# P irrigtation
@constraint(
    m,
    10.82 * X23 + 8.16 * X24 + 5.06 * X25 - 1.98 * Z * X127 - 7.46 * P * M * X129 -
    0.57 * M * X129 - 1.83 * Z * X129 - 0.42 * X136 <= 0
)
# K irrigation
@constraint(
    m,
    30.71 * X23 + 22.58 * X24 + 13.28 * X25 - 1.33 * Z * X127 - 21.82 * P * M * X129 -
    3.04 * M * X129 - 3.17 * Z * X129 - 6.08 * X136 <= 0
)
# N dry cropland
@constraint(
    m,
    41.46 * X26 + 30.56 * X27 + 21.51 * X29 + 24.67 * X13 - 4.60 * X15 - 0.96 * X16 +
    13.41 * X152 +
    9.69 * X153 - 10.51 * X26 +
    10.51 * X100 +
    10.51 * X101 - 8.18 * X27 +
    8.18 * X102 +
    8.18 * X103 - 6.21 * X29 +
    6.21 * X108 +
    6.21 * X109 - 14.11 * X113 - 11.46 * X115 - 8.82 * X117 - 8.82 * X119 - 7.94 * X121 -
    4 * X152 - 3 * X153 - 4.42 * Z * X128 - 18.39 * P * M * X130 - 2.60 * M * X130 -
    3.78 * Z * X130 - 17.40 * X139 - 13.05 * X143 - 8.70 * X147 <= 0
)
# P dry cropland
@constraint(
    m,
    6.31 * X26 +
    4.61 * X27 +
    3.21 * X29 +
    4.72 * X13 +
    3.65 * X15 +
    2.29 * X16 +
    1.62 * X152 +
    1.34 * X153 - 2.63 * X26 +
    2.63 * X100 +
    2.63 * X101 - 2.04 * X27 +
    2.04 * X102 +
    2.04 * X103 - 1.55 * X29 +
    1.55 * X108 +
    1.55 * X109 - 2.81 * X113 - 2.29 * X115 - 1.76 * X117 - 1.76 * X119 - 1.58 * X121 -
    0.71 * X152 - 0.54 * X153 - 1.98 * Z * X128 - 7.46 * P * M * X130 - 0.57 * M * X130 -
    1.83 * Z * X130 - 1.72 * X139 - 1.29 * X143 - 0.86 * X147 <= 0
)
# K dry cropland
@constraint(
    m,
    5.30 * X26 + 0.64 * X27 - 3.27 * X29 +
    14.91 * X13 +
    1.98 * X15 +
    3.16 * X16 +
    10.14 * X152 - 1.58 * X153 - 14.13 * X26 +
    14.13 * X100 +
    14.13 * X101 - 11.13 * X27 +
    11.13 * X102 +
    11.13 * X103 - 8.46 * X29 +
    8.46 * X108 +
    8.46 * X109 - 15.06 * X113 - 12.23 * X115 - 9.41 * X117 - 9.41 * X119 - 8.57 * X121 -
    3.64 * X152 - 2.73 * X153 - 1.33 * Z * X128 - 21.82 * P * M * X130 - 3.04 * M * X130 -
    3.17 * Z * X130 - 13.99 * X139 - 10.49 * X143 - 7 * X147 <= 0
)
# N dry olives
@constraint(
    m,
    27.45 * X09 +
    14.88 * X10 +
    21.40 * X28 +
    18.79 * X12 +
    17.76 * X154 +
    2.64 * X17 +
    25.43 * X30 +
    21.36 * X31 +
    17.88 * X32 - 5.84 * X09 +
    5.84 * X104 +
    5.84 * X105 - 4.52 * X28 +
    4.52 * X106 +
    4.52 * X107 - 3.07 * X154 - 3.82 * X123 - 12.10 * X133 - 18.39 * P * M * X131 -
    2.60 * M * X131 - 3.78 * Z * X131 - 17.40 * X140 - 13.05 * X144 - 8.70 * X148 <= 0
)
# P dry olives
@constraint(
    m,
    3.71 * X09 +
    1.64 * X10 +
    2.79 * X28 +
    2.10 * X12 +
    0.76 * X154 +
    4.11 * X17 +
    3.10 * X30 +
    2.74 * X31 +
    2.44 * X32 - 1.46 * X09 +
    1.46 * X104 +
    1.46 * X105 - 1.13 * X28 +
    1.13 * X106 +
    1.13 * X107 - 0.55 * X154 - 0.46 * X123 - 2.56 * X133 - 7.46 * P * M * X131 -
    0.57 * M * X131 - 1.83 * Z * X131 - 1.72 * X140 - 1.29 * X144 - 0.86 * X148 <= 0
)
# K dry olives
@constraint(
    m,
    11.04 * X09 + 3.94 * X10 + 8.42 * X28 + 10.49 * X12 - 5.21 * X154 + 6.14 * X17 -
    4.39 * X30 - 5.48 * X31 - 6.35 * X32 - 7.95 * X09 +
    7.95 * X104 +
    7.95 * X105 - 6.15 * X28 +
    6.15 * X106 +
    6.15 * X107 - 2.80 * X154 - 1.19 * X123 - 6.54 * X133 - 21.82 * P * M * X131 -
    3.04 * M * X131 - 3.17 * Z * X131 - 13.99 * X140 - 10.49 * X144 - 7 * X148 <= 0
)
# N vineyards
@constraint(
    m,
    11.28 * X33 + 8.55 * X34 + 4.01 * X35 - 18.39 * P * M * X132 - 2.60 * M * X132 -
    3.78 * Z * X132 - 3.91 * X137 - 17.40 * X141 - 13.05 * X145 - 8.70 * X149 <= 0
)
# P vineyards
@constraint(
    m,
    2 * X33 + 1.67 * X34 + 1.13 * X35 - 7.46 * P * M * X132 - 0.57 * M * X132 -
    1.83 * Z * X132 - 0.42 * X137 - 1.72 * X141 - 1.29 * X145 - 0.86 * X149 <= 0
)
# K vineyards
@constraint(
    m,
    1.17 * X33 - 21.82 * P * M * X132 - 3.04 * M * X132 - 3.17 * Z * X132 - 6.08 * X137 -
    13.99 * X141 - 10.49 * X145 - 7 * X149 <= 0
)

#### restrictions for feedings and firewood ###
# subject to restriction87: 1242*X23 + 1023*X24 + 731*X25 + 1169*X26 + 877*X27 + 585*X09 + 424*X28 + 636*X29 - 146.56*Z >= 0;
# subject to restriction88: 273*X30 + 202*X31 + 141*X32 - 12.46*Z >= 0;
@constraint(m, 2142 * X33 + 1683 * X34 + 918 * X35 - 29.37 * Z >= 0)
# subject to restriction90: 851.62*X71 + 673.87*X75 + 505.60*X79 + 319.82*X83 - 8.70*Z >= 0;
@constraint(m, 5069.59 * X01 - 63.06 * Z == 0)
# subject to restriction92: 1679.28*X152 + 1214.75*X153 + 1250.5*X154 - 116.04*Z >= 0;
@constraint(m, 4147.5 * X02 - 10.09 * Z == 0)
@constraint(m, 525 * X03 - 5.05 * Z == 0)
@constraint(
    m,
    2475 * X02 +
    2847 * X03 +
    1997 * X134 +
    1627.73 * X135 +
    5438 * X138 +
    4078 * X142 +
    2719 * X146 - 569.4 * Z == 0
)

@constraint(m, 1627.73 * X135 - 0.1 * 569.4 * Z <= 0)


### restrictions for labour (human and livestock) ###
# January
# @constraint(m, 6.1*X01 + 18.2*X06 + 9.2*(X07 + X15 + X16 + X17) + 5.2*X13 + 6.8*X18 + 2.96*M + 0.46*Z - 7.55*Z <= 0)
# February
# @constraint(m, 6.1*X01 + 3.3*(X02 + X03) + 4.9*X04 + 4.2*X05 + 9.1*(X07 + X15 + X16 + X17) + 4.9*X08 + 5*X09 + 4.2*X10 + 6.2*X11 + 2.1*X12 + 5.2*X13 + 2.96*M + 0.46*Z + 0.03*Z*X126 + 0.06*Z*X127 + 0.41*P*M*X129 + 0.06*M*X129 + 0.08*Z*X129 + 4.34*X136- 8.37*Z <= 0)
# March
# @constraint(m,8.5*X01 + 8.7*X04 + 7.3*X05 + 26.1*X06 + 8.8*X08 + 9*X10 + 7.3*X10 + 9.7*X11 + 4.2*X12 + 5.7*X13 + 14.9*X14 + 14.9*X18 + 5.1*X19 + 2.96*M + 0.46*Z + 28.36*X88 + 12.15*X89 + 0.03*Z*X128 + 0.205*P*M*X130 + 0.03*M*X130 + 0.04*Z*X130 + 12.09*X139 + 9.07*X143 + 6.05*X147- 9.45*Z <= 0)
# April
# @constraint(m, 13.6*X01 + 2.4*X04 + 1*X05 + 5.3*X06 + 9.1*(X07 + X15 + X16 + X17) + 2.5*X08 + 2.5*X09 + 1*X10 + 4.2*X11 + 2.1*X12 + 14.9*X18 + 13.1*X19 + 2.96*M + 0.46*Z - 10.60*Z <= 0)
# May
# @constraint(m, 15.3*X01 + 9.1*X05 + 3.3*X06 + 9.1*X10 + 8.6*X13 + 6.4*X14 + 12.2*X18 + 4.7*X19 + 2.96*M + 0.46*Z + 0.41*P*M*X132 + 0.06*M*X132 + 0.08*Z*X132 + 3.67*X19 + 4.34*X137 + 12.09*X141 + 9.07*X145 + 6.05*X149 - 11.57*Z <= 0)
# June
# @constraint(m, 15.3*X01 + 1.9*(X02 + X03) + 4.8*X04 + 7.2*X05 + 3.3*X06 + 10.6*(X07 + X15 + X16 + X17) + 4.8*X08 + 4.9*X09 + 7.2*X10 + 4.2*X11+ 4.7*X12 + 4.4*X13 + 6.4*X14 + 5.4*X18 + 5*X19 + 2.96*M + 0.46*Z - 12.05*Z <= 0)
# July
# @constraint(m, 18.8*X01 + 1.9*(X02 + X03) + 14.1*X04 + 3.3*X06 + 4.8*(X07 + X15 + X16 + X17) + 14.2*X08 + 14.5*X09 + 9.6*X11 + 14.3*X12 + 7.4*X13 + 0.6*X19 + 2.96*M + 0.46*Z - 11.82*Z <= 0)
# August
# @constraint(m, 18.8*X01 + 5.3*(X02 + X03) + 3.9*X04 + 4.4*X05 + 3.3*X06 + 3.9*X08 + 4*X09 + 4.4*X10 + 3.4*X11 + 14.7*X12 + 5.9*X13 + 2.96*M +0.46*Z + 0.03*Z*X126 + 0.41*P*M*X131 + 0.06*M*X131 + 0.08*Z*X131 + 2.04*(X09 - X104 - X105) + 2.09*(X28 - X106 - X107) + 1.70*X123 + 1.39*X154 + 3.59*X133 + 12.09*X140 + 9.07*X144 + 6.05*X148 - 10.96*Z <= 0)
# September
# @constraint(m, 17*X01 + 5.3*(X02 + X03) + 1.9*X04 + 1.9*X05 + 14.4*X06 + 12.8*(X07 + X15 + X16 + X17) + 2*X08 + 2*X09 + 1.9*X10 + 2.9*X11 + 3*X12 + 3.9*X13 + 35.5*X14 + 1.8*X19 + 2.96*M + 0.46*Z + 0.03*Z*X128 + 0.205*P*M*X130 + 0.03*M*X130 + 0.04*Z*X130 + 4.87*(X26 - X100 - X101) + 3.79*(X27 - X102 - X103) + 3.79*(X29 - X108 - X109) + 3.02*X113 + 2.45*X115 + 1.89*X117 + 1.89*X119 + 1.70*X121 + 1.81*X152 + 1.36*X153- 9.85*Z <= 0)
# October
# @constraint(m, 10*X01 + 5.3*X04 + 8.3*X05 + 13.8*X06 + 5.4*X08 +5.5*X09 + 8.4*X10 + 4.7*X11 + 2.5*X12 + 3.9*X13 + 10.6*X14 + 12*X19 + 2.96*M + 0.46*Z - 8.70*Z <= 0)
# November
# @constraint(m, 6.8*X01 + 3.4*X04 + 40.1*X06 + 8*(X07 + X15 + X16 + X17) + 3.4*X08 + 3.5*X09 + 3.5*X11 + 0.4*X12 + 5.2*X14 + 1.1*X19 + 2.96*M + 0.46*Z - 7.74*Z <= 0)
# December
# @constraint(m, 6.1*X01 + 8.7*X05 + 62.6*X06 + 1.5*(X07 + X15 + X16 + X17) + 8.8*X10 + 27.1*X18 + 2.96*M + 0.46*Z - 7.28*Z <= 0)

# livestock
# @constraint(m, 22.9*X01 + 8.9*X02 + 8.9*X03 + 13.4*X04 + 8.3*X05 + 22.9*X06 + 4.4*X07 + 13.4*X08 + 14*X09 + 8.3*X10 + 14*X11 + 14*X12 + 5.7*X13 + 5.5*X14 + 4.4*X15 + 5.7*X16 + 14.6*X17 + 8.9*X18 + 4.2*X19 - 220*M <= 0)


### restrictions alternatives ###

# irrigation limitation
@constraint(
    m,
    X04 + X06 -
    1.30 / 100 * (
        X01 +
        X02 +
        X03 +
        X04 +
        X06 +
        X08 +
        X09 +
        X10 +
        X11 +
        X12 +
        X13 +
        X14 +
        X15 +
        X16 +
        X17 +
        X19 +
        X21 +
        X22
    ) <= 0
)

# MSS surface limitation
@constraint(
    m,
    X01 +
    X02 +
    X03 +
    X04 +
    X06 +
    X08 +
    X09 +
    X10 +
    X11 +
    X12 +
    X13 +
    X14 +
    X15 +
    X16 +
    X17 +
    X19 +
    X21 +
    X22 - 1.52 * Z == 0
)

# economic restriction
@constraint(
    m,
    104.9 + 21.84 * Z - 1.625 +
    5.11 * (X01 + X02 + X03 + X04 + X06) +
    9.94 * (X08 + X09 + X10 + X11 + X12 + X13 + X14 + X15 + X16 + X17) +
    5.48 * X19 +
    2.95 * (X21 + X22) +
    1.7 * M +
    0.1 * Z - (5069.59 * X01 - 63.06 * Z) * 1.06 -
    (1250.5 * X154 + 1679.28 * X152 + 1214.75 * X153 - 116.04 * Z) * 0.11 -
    (
        1242 * X23 +
        1023 * X24 +
        731 * X25 +
        1169 * X26 +
        877 * X27 +
        585 * X09 +
        424 * X28 +
        636 * X29 - 118.30 * Z
    ) * 0.31 -
    (
        1348 * (0.5 * X23 - X49 - X50 - X51 - X52) +
        1075 * (0.5 * X24 - X53 - X54 - X55 - X56) +
        802 * (0.5 * X25 - X57 - X58 - X59 - X60) +
        501 * (X10 - X61 - X62 - X63 - X64)
    ) * 0.29 - (1213 * X23 + 1104 * X24 + 996 * X25) * 0.9625 -
    (
        1078 * (0.5 * X23 - X68 - X69 - X70 - X71) +
        853 * (0.5 * X24 - X72 - X73 - X74 - X75) +
        640 * (0.5 * X25 - X76 - X77 - X78 - X79) +
        658 * (X15 - X80 - X81 - X82 - X83)
    ) * 0.42 - 439 * (X12 - X45 - X46 - X47 - X48) * 0.20 -
    6754 * 0.28 * (X13 - X65 - X66 - X67) * 0.08 - 560 * (X16 - X84 - X85 - X86) * 0.15 -
    585 * (X17 - X87 - X88 - X89) * 0.15 -
    (273 * X30 + 202 * X31 + 141 * X32 - 12.42 * Z) * 1.24 -
    (2142 * X33 + 1683 * X34 + 918 * X35 - 29.37 * Z) * 0.12 -
    1627.73 * (X19 - X135 - X136 - X137) * 0.01 <= 0
)

# @constraint(m, X119 == 0)
# @constraint(m, X120 == 0)
# @constraint(m, X121 == 0)
# @constraint(m, X122 == 0)

# economic restriction minimum vineyard
# @constraint(m, 104.9 + 21.84*Z - 1.625 + 5.11*(X01 + X02 + X03 + X04 + X06) + 9.94*(X08 + X09 + X10 + X11 + X12 + X13 + X14 + X15 + X16 + X17) + 5.48*X19 + 2.95*(X21+X22) + 1.7*M + 0.1*Z  - (2142*X33 + 1683*X34 + 918*X35 - 29.37*Z)*0.12 - 1627.73*(X19 - X135 - X136 - X137)*0.01 <= 0)

# @constraint(m, M - 0.1011*(X01 + X02 + X03 + X04 + X06 + X08 + X09 + X10 + X11 + X12 + X13 + X14 + X15 + X16 + X17 + X18 + X19) == 0)

# no humans limitation
# @constraint(m, X01 + X02 + X03 == 0)

# limitation for vineyard
# @constraint(m, X19 - 48.72/100*(X01 + X02 + X03 + X04 + X06 + X08 + X09 + X10 + X11 + X12 + X13 + X14 + X15 + X16 + X17 + X18 + X19 + X21 + X22) >= 0)
# @constraint(m, M - 1 == 0)


optimize!(m)

# collect results
X01,
X02,
X03,
X04,
X05,
X06,
X07,
X08,
X09,
X10,
X11,
X12,
X13,
X14,
X15,
X16,
X17,
X18,
X19,
X20,
X21,
X22,
X23,
X24,
X25,
X26,
X27,
X28,
X29,
X30,
X31,
X32,
X33,
X34,
X35,
X36,
X37,
X38,
X39,
X40,
X41,
X42,
X43,
X44,
X45,
X46,
X47,
X48,
X49,
X50,
X51,
X52,
X53,
X54,
X55,
X56,
X57,
X58,
X59,
X60,
X61,
X62,
X63,
X64,
X65,
X66,
X67,
X68,
X69,
X70,
X71,
X72,
X73,
X74,
X75,
X76,
X77,
X78,
X79,
X80,
X81,
X82,
X83,
X84,
X85,
X86,
X87,
X88,
X89,
X90,
X91,
X92,
X93,
X94,
X95,
X96,
X97,
X98,
X99,
X100,
X101,
X102,
X103,
X104,
X105,
X106,
X107,
X108,
X109,
X110,
X111,
X112,
X113,
X114,
X115,
X116,
X117,
X118,
X119,
X120,
X121,
X122,
X123,
X124,
X125,
X126,
X127,
X128,
X129,
X130,
X131,
X132,
X133,
X134,
X135,
X136,
X137,
X138,
X139,
X140,
X141,
X142,
X143,
X144,
X145,
X146,
X147,
X148,
X149,
X150,
X151,
X152,
X153,
X154 =
    value.([
        X01,
        X02,
        X03,
        X04,
        X05,
        X06,
        X07,
        X08,
        X09,
        X10,
        X11,
        X12,
        X13,
        X14,
        X15,
        X16,
        X17,
        X18,
        X19,
        X20,
        X21,
        X22,
        X23,
        X24,
        X25,
        X26,
        X27,
        X28,
        X29,
        X30,
        X31,
        X32,
        X33,
        X34,
        X35,
        X36,
        X37,
        X38,
        X39,
        X40,
        X41,
        X42,
        X43,
        X44,
        X45,
        X46,
        X47,
        X48,
        X49,
        X50,
        X51,
        X52,
        X53,
        X54,
        X55,
        X56,
        X57,
        X58,
        X59,
        X60,
        X61,
        X62,
        X63,
        X64,
        X65,
        X66,
        X67,
        X68,
        X69,
        X70,
        X71,
        X72,
        X73,
        X74,
        X75,
        X76,
        X77,
        X78,
        X79,
        X80,
        X81,
        X82,
        X83,
        X84,
        X85,
        X86,
        X87,
        X88,
        X89,
        X90,
        X91,
        X92,
        X93,
        X94,
        X95,
        X96,
        X97,
        X98,
        X99,
        X100,
        X101,
        X102,
        X103,
        X104,
        X105,
        X106,
        X107,
        X108,
        X109,
        X110,
        X111,
        X112,
        X113,
        X114,
        X115,
        X116,
        X117,
        X118,
        X119,
        X120,
        X121,
        X122,
        X123,
        X124,
        X125,
        X126,
        X127,
        X128,
        X129,
        X130,
        X131,
        X132,
        X133,
        X134,
        X135,
        X136,
        X137,
        X138,
        X139,
        X140,
        X141,
        X142,
        X143,
        X144,
        X145,
        X146,
        X147,
        X148,
        X149,
        X150,
        X151,
        X152,
        X153,
        X154,
    ])

unnamed =
    X01 +
    X02 +
    X03 +
    X04 +
    X06 +
    X08 +
    X09 +
    X10 +
    X11 +
    X12 +
    X13 +
    X14 +
    X15 +
    X16 +
    X17 +
    X19 +
    X21 +
    X22

# UB
ub_pars = [
    33810,
    2347,
    4380.1,
    8998.6,
    7577.8,
    5683.3,
    5306,
    4244.8,
    3183.6,
    10659.7,
    9771.4,
    8883.1,
    12986.4,
    10551.35,
    8116.45,
    8525,
    6630.5,
    4736.1,
    3976.9,
    3652,
    5021.6,
    3003.8,
    5039.9,
    6455.3,
    4841.3,
    4965.6,
    16232.9,
    13958.7,
    13958.7,
    1588.6,
    1175.3,
    820.5,
    18407.9,
    18212.8,
    17887.6,
    5039.9,
    54208,
    38717,
    23226,
]
ub_vars = [
    X01,
    X02,
    X03,
    X23,
    X24,
    X25,
    X23,
    X24,
    X25,
    X23,
    X24,
    X25,
    X23,
    X24,
    X25,
    X26,
    X27,
    X09,
    X10,
    X28,
    X29,
    X12,
    X13,
    X152,
    X153,
    X154,
    X15,
    X16,
    X17,
    X30,
    X31,
    X32,
    X33,
    X34,
    X35,
    X21,
    X36,
    X37,
    X38,
]
ub = sum(ub_pars .* ub_vars)

# FFP available for humans #
ffp_humans =
    8474.95 * X01 +
    16039.8 * X02 +
    29143.53 * X02 +
    29875 * X03 +
    33591.75 * X03 +
    19546.60 * X23 +
    16099.97 * X24 +
    11504.48 * X25 +
    19662.24 * X23 +
    17895.40 * X24 +
    16274.44 * X25 +
    16493.4 * (0.5 * X23 - X68 - X69 - X70) +
    13142.7 * (0.5 * X24 - X72 - X73 - X74) +
    9792 * (0.5 * X25 - X76 - X77 - X78) +
    18397.72 * X26 +
    13802.23 * X27 +
    9206.73 * X09 +
    6599.98 * X28 +
    9899.98 * X29 +
    7569.41 * X152 +
    5473.78 * X153 +
    5636.4 * X154 +
    10067.4 * (X15 - X80 - X81 - X82) +
    10838.1 * X30 +
    8019.4 * X31 +
    5597.7 * X32 +
    27993.67 * X134 +
    6226.07 * X33 +
    4891.85 * X34 +
    2671.06 * X35 +
    27151.08 * (X19 - X136 - X137) +
    67431.2 * (X36 - X139 - X140 - X141) +
    50567.2 * (X37 - X143 - X144 - X145) +
    33715.6 * (X38 - X147 - X148 - X149)

# FFP available for livestock #
ffp_livestock =
    46465.72 * (X23 - X94 - X95) +
    39129.11 * (X24 - X96 - X97) +
    29346.43 * (X25 - X98 - X99) +
    21446.68 * (0.5 * X23 - X49 - X50 - X51 - X52) +
    17103.25 * (0.5 * X24 - X53 - X54 - X55 - X56) +
    12759.82 * (0.5 * X25 - X57 - X58 - X59 - X60) +
    23057.55 * (0.5 * X23 - X112 - X113) +
    18734 * (0.5 * X24 - X114 - X115) +
    14410.56 * (0.5 * X25 - X116 - X117) +
    41898 * (X26 - X100 - X101) +
    32590.73 * (X27 - X102 - X103) +
    23278.88 * (X09 - X104 - X105) +
    7970.91 * (X10 - X61 - X62 - X63 - X64) +
    18310.29 * (X28 - X106 - X107) +
    25178.01 * (X29 - X108 - X109) +
    6871.23 * (X12 - X45 - X46 - X47 - X48) +
    17148.33 * (X12 - X110 - X111) +
    34419.91 * (X13 - X65 - X66 - X67) +
    14410.56 * (X15 - X118 - X119) +
    9285.19 * (X16 - X84 - X85 - X86) +
    12970.32 * (X16 - X120 - X121) +
    9682.63 * (X17 - X87 - X88 - X89) +
    12970.32 * (X17 - X122 - X123)

# FFP #
ffp =
    8474.95 * X01 +
    16039.8 * X02 +
    29143.53 * X02 +
    29875 * X03 +
    33591.75 * X03 +
    19546.60 * X23 +
    16099.97 * X24 +
    11504.48 * X25 +
    19662.24 * X23 +
    17895.40 * X24 +
    16274.44 * X25 +
    16493.4 * (0.5 * X23 - X68 - X69 - X70) +
    13142.7 * (0.5 * X24 - X72 - X73 - X74) +
    9792 * (0.5 * X25 - X76 - X77 - X78) +
    18397.72 * X26 +
    13802.23 * X27 +
    9206.73 * X09 +
    6599.98 * X28 +
    9899.98 * X29 +
    7569.41 * X152 +
    5473.78 * X153 +
    5636.4 * X154 +
    10067.4 * (X15 - X80 - X81 - X82) +
    10838.1 * X30 +
    8019.4 * X31 +
    5597.7 * X32 +
    27993.67 * X134 +
    6226.07 * X33 +
    4891.85 * X34 +
    2671.06 * X35 +
    27151.08 * (X19 - X136 - X137) +
    67431.2 * (X36 - X139 - X140 - X141) +
    50567.2 * (X37 - X143 - X144 - X145) +
    33715.6 * (X38 - X147 - X148 - X149) +
    46465.72 * (X23 - X94 - X95) +
    39129.11 * (X24 - X96 - X97) +
    29346.43 * (X25 - X98 - X99) +
    21446.68 * (0.5 * X23 - X49 - X50 - X51 - X52) +
    17103.25 * (0.5 * X24 - X53 - X54 - X55 - X56) +
    12759.82 * (0.5 * X25 - X57 - X58 - X59 - X60) +
    23057.55 * (0.5 * X23 - X112 - X113) +
    18734 * (0.5 * X24 - X114 - X115) +
    14410.56 * (0.5 * X25 - X116 - X117) +
    41898 * (X26 - X100 - X101) +
    32590.73 * (X27 - X102 - X103) +
    23278.88 * (X09 - X104 - X105) +
    7970.91 * (X10 - X61 - X62 - X63 - X64) +
    18310.29 * (X28 - X106 - X107) +
    25178.01 * (X29 - X108 - X109) +
    6871.23 * (X12 - X45 - X46 - X47 - X48) +
    17148.33 * (X12 - X110 - X111) +
    34419.91 * (X13 - X65 - X66 - X67) +
    14410.56 * (X15 - X118 - X119) +
    9285.19 * (X16 - X84 - X85 - X86) +
    12970.32 * (X16 - X120 - X121) +
    9682.63 * (X17 - X87 - X88 - X89) +
    12970.32 * (X17 - X122 - X123)

# LFP #
lfp = 510.73 * Z

# FP #
fp =
    8474.95 * X01 +
    16039.8 * X02 +
    29143.53 * X02 +
    29875 * X03 +
    33591.75 * X03 +
    19546.60 * X23 +
    16099.97 * X24 +
    11504.48 * X25 +
    19662.24 * X23 +
    17895.40 * X24 +
    16274.44 * X25 +
    16493.4 * (0.5 * X23 - X68 - X69 - X70) +
    13142.7 * (0.5 * X24 - X72 - X73 - X74) +
    9792 * (0.5 * X25 - X76 - X77 - X78) +
    18397.72 * X26 +
    13802.23 * X27 +
    9206.73 * X09 +
    6599.98 * X28 +
    9899.98 * X29 +
    7569.41 * X152 +
    5473.78 * X153 +
    5636.4 * X154 +
    10067.4 * (X15 - X80 - X81 - X82) +
    10838.1 * X30 +
    8019.4 * X31 +
    5597.7 * X32 +
    27993.67 * X134 +
    6226.07 * X33 +
    4891.85 * X34 +
    2671.06 * X35 +
    27151.08 * (X19 - X136 - X137) +
    67431.2 * (X36 - X139 - X140 - X141) +
    50567.2 * (X37 - X143 - X144 - X145) +
    33715.6 * (X38 - X147 - X148 - X149) +
    46465.72 * (X23 - X94 - X95) +
    39129.11 * (X24 - X96 - X97) +
    29346.43 * (X25 - X98 - X99) +
    21446.68 * (0.5 * X23 - X49 - X50 - X51 - X52) +
    17103.25 * (0.5 * X24 - X53 - X54 - X55 - X56) +
    12759.82 * (0.5 * X25 - X57 - X58 - X59 - X60) +
    23057.55 * (0.5 * X23 - X112 - X113) +
    18734 * (0.5 * X24 - X114 - X115) +
    14410.56 * (0.5 * X25 - X116 - X117) +
    41898 * (X26 - X100 - X101) +
    32590.73 * (X27 - X102 - X103) +
    23278.88 * (X09 - X104 - X105) +
    7970.91 * (X10 - X61 - X62 - X63 - X64) +
    18310.29 * (X28 - X106 - X107) +
    25178.01 * (X29 - X108 - X109) +
    6871.23 * (X12 - X45 - X46 - X47 - X48) +
    17148.33 * (X12 - X110 - X111) +
    34419.91 * (X13 - X65 - X66 - X67) +
    14410.56 * (X15 - X118 - X119) +
    9285.19 * (X16 - X84 - X85 - X86) +
    12970.32 * (X16 - X120 - X121) +
    9682.63 * (X17 - X87 - X88 - X89) +
    12970.32 * (X17 - X122 - X123) +
    510.73 * Z

# EXCEDENT #
excedent =
    8474.95 * X01 +
    16039.8 * X02 +
    29143.53 * X02 +
    29875 * X03 +
    33591.75 * X03 +
    19546.60 * X23 +
    16099.97 * X24 +
    11504.48 * X25 +
    19662.24 * X23 +
    17895.40 * X24 +
    16274.44 * X25 +
    16493.4 * (0.5 * X23 - X68 - X69 - X70) +
    13142.7 * (0.5 * X24 - X72 - X73 - X74) +
    9792 * (0.5 * X25 - X76 - X77 - X78) +
    18397.72 * X26 +
    13802.23 * X27 +
    9206.73 * X09 +
    6599.98 * X28 +
    9899.98 * X29 +
    7569.41 * X152 +
    5473.78 * X153 +
    5636.4 * X154 +
    10067.4 * (X15 - X80 - X81 - X82) +
    10838.1 * X30 +
    8019.4 * X31 +
    5597.7 * X32 +
    27993.67 * X134 +
    6226.07 * X33 +
    4891.85 * X34 +
    2671.06 * X35 +
    27151.08 * (X19 - X136 - X137) +
    67431.2 * (X36 - X139 - X140 - X141) +
    50567.2 * (X37 - X143 - X144 - X145) +
    33715.6 * (X38 - X147 - X148 - X149) +
    46465.72 * (X23 - X94 - X95) +
    39129.11 * (X24 - X96 - X97) +
    29346.43 * (X25 - X98 - X99) +
    21446.68 * (0.5 * X23 - X49 - X50 - X51 - X52) +
    17103.25 * (0.5 * X24 - X53 - X54 - X55 - X56) +
    12759.82 * (0.5 * X25 - X57 - X58 - X59 - X60) +
    23057.55 * (0.5 * X23 - X112 - X113) +
    18734 * (0.5 * X24 - X114 - X115) +
    14410.56 * (0.5 * X25 - X116 - X117) +
    41898 * (X26 - X100 - X101) +
    32590.73 * (X27 - X102 - X103) +
    23278.88 * (X09 - X104 - X105) +
    7970.91 * (X10 - X61 - X62 - X63 - X64) +
    18310.29 * (X28 - X106 - X107) +
    25178.01 * (X29 - X108 - X109) +
    6871.23 * (X12 - X45 - X46 - X47 - X48) +
    17148.33 * (X12 - X110 - X111) +
    34419.91 * (X13 - X65 - X66 - X67) +
    14410.56 * (X15 - X118 - X119) +
    9285.19 * (X16 - X84 - X85 - X86) +
    12970.32 * (X16 - X120 - X121) +
    9682.63 * (X17 - X87 - X88 - X89) +
    12970.32 * (X17 - X122 - X123) +
    510.73 * Z - 4218.1 * Z -
    569.4 *
    Z *
    (
        67431.2 * X138 +
        50567.2 * X142 +
        33715.6 * X146 +
        29205 * X02 +
        33594.6 * X03 +
        18084.08 * X135 +
        27718.36 * X134
    ) / (
        5438 * X138 +
        4078 * X142 +
        2719 * X146 +
        2475 * X02 +
        2847 * X03 +
        1627.73 * X135 +
        1997 * X134
    )

# FBR #
fbr =
    2828.20 * X01 +
    2297.75 * X04 +
    270.47 * X05 +
    1523.70 * X06 +
    1392.3 * X07 +
    23057.44 * X113 +
    18734 * X115 +
    14410.56 * X117 +
    2297.75 * X08 +
    2297.75 * X09 +
    175.01 * X10 +
    2194.81 * X11 +
    1377.38 * X12 +
    77.7 * X13 +
    805.73 * X14 +
    1468.22 * X152 +
    1101.17 * X153 +
    1129.39 * X154 +
    1129.39 * X125 +
    1086.3 * X15 +
    14410.56 * X119 +
    1606.32 * X16 +
    12970.32 * X121 +
    1208.88 * X17 +
    12970.32 * X123 +
    27993.67 * X133 +
    9355.13 * X19 +
    27151.08 * (X136 + X137) +
    67431.2 * (X139 + X140 + X141) +
    50567.2 * (X143 + X144 + X145) +
    33715.6 * (X147 + X148 + X149)

# LBR #
lbr =
    18981.19 * X01 +
    46465.72 * (X94 + X95) +
    39129.11 * (X96 + X97) +
    29346.43 * (X98 + X99) +
    16445.21 * X23 +
    13156.01 * X24 +
    9867.6 * X25 +
    21446.68 * (X49 + X50 + X51 + X52) +
    17103.25 * (X53 + X54 + X55 + X56) +
    12759.82 * (X57 + X58 + X59 + X60) +
    23397.26 * X23 +
    21447.36 * X24 +
    19497.46 * X25 +
    16493.4 * (X68 + X69 + X70) +
    13142.7 * (X72 + X73 + X74) +
    9792 * (X76 + X77 + X78) +
    23057.44 * X112 +
    18734 * X115 +
    14410.56 * X116 +
    41898 * (X100 + X101) +
    32590.73 * (X102 + X103) +
    23278.88 * (X104 + X105) +
    12331.55 * X10 +
    7970.91 * (X61 + X62 + X63 + X64) +
    18310.29 * (X106 + X107) +
    25178.01 * (X108 + X109) +
    6871.23 * (X45 + X46 + X47 + X48) +
    17148.33 * (X110 + X111) +
    34419.91 * (X65 + X66 + X67) +
    10067.4 * (X80 + X81 + X82) +
    14410.56 * X118 +
    9285.19 * (X84 + X85 + X86) +
    12970.32 * X120 +
    9682.63 * (X87 + X88 + X89) +
    12970.32 * X122 +
    11250.08 * X30 +
    8253.26 * X31 +
    5809.91 * X32 +
    15908.64 * X30 +
    11784.96 * X31 +
    8248.68 * X32 +
    8076.36 * X33 +
    6345.14 * X34 +
    3461.55 * X35 +
    26997.48 * X21 +
    3737.6 * X22 +
    10417.32 * X22

# BR #
br =
    2828.20 * X01 +
    2297.75 * X04 +
    270.47 * X05 +
    1523.70 * X06 +
    1392.3 * X07 +
    23057.44 * X113 +
    18734 * X115 +
    14410.56 * X117 +
    2297.75 * X08 +
    2297.75 * X09 +
    175.01 * X10 +
    2194.81 * X11 +
    1377.38 * X12 +
    77.7 * X13 +
    805.73 * X14 +
    1468.22 * X152 +
    1101.17 * X153 +
    1129.39 * X154 +
    1129.39 * X125 +
    1086.3 * X15 +
    14410.56 * X119 +
    1606.32 * X16 +
    12970.32 * X121 +
    1208.88 * X17 +
    12970.32 * X123 +
    27993.67 * X133 +
    9355.13 * X19 +
    27151.08 * (X136 + X137) +
    67431.2 * (X139 + X140 + X141) +
    50567.2 * (X143 + X144 + X145) +
    33715.6 * (X147 + X148 + X149) +
    18981.19 * X01 +
    46465.72 * (X94 + X95) +
    39129.11 * (X96 + X97) +
    29346.43 * (X98 + X99) +
    16445.21 * X23 +
    13156.01 * X24 +
    9867.6 * X25 +
    21446.68 * (X49 + X50 + X51 + X52) +
    17103.25 * (X53 + X54 + X55 + X56) +
    12759.82 * (X57 + X58 + X59 + X60) +
    23397.26 * X23 +
    21447.36 * X24 +
    19497.46 * X25 +
    16493.4 * (X68 + X69 + X70) +
    13142.7 * (X72 + X73 + X74) +
    9792 * (X76 + X77 + X78) +
    23057.44 * X112 +
    18734 * X115 +
    14410.56 * X116 +
    41898 * (X100 + X101) +
    32590.73 * (X102 + X103) +
    23278.88 * (X104 + X105) +
    12331.55 * X10 +
    7970.91 * (X61 + X62 + X63 + X64) +
    18310.29 * (X106 + X107) +
    25178.01 * (X108 + X109) +
    6871.23 * (X45 + X46 + X47 + X48) +
    17148.33 * (X110 + X111) +
    34419.91 * (X65 + X66 + X67) +
    10067.4 * (X80 + X81 + X82) +
    14410.56 * X118 +
    9285.19 * (X84 + X85 + X86) +
    12970.32 * X120 +
    9682.63 * (X87 + X88 + X89) +
    12970.32 * X122 +
    11250.08 * X30 +
    8253.26 * X31 +
    5809.91 * X32 +
    15908.64 * X30 +
    11784.96 * X31 +
    8248.68 * X32 +
    8076.36 * X33 +
    6345.14 * X34 +
    3461.55 * X35 +
    26997.48 * X21 +
    3737.6 * X22 +
    10417.32 * X22

# LS #
ls =
    (
        22.9 * X01 +
        8.9 * X02 +
        8.9 * X03 +
        13.4 * X04 +
        8.3 * X05 +
        22.9 * X06 +
        4.4 * X07 +
        13.4 * X08 +
        14 * X09 +
        8.3 * X10 +
        14 * X11 +
        14 * X12 +
        5.7 * X13 +
        5.5 * X14 +
        4.4 * X15 +
        5.7 * X16 +
        14.6 * X17 +
        8.9 * X18 +
        4.2 * X19
    ) * 25.825 +
    13641.08 * P * M +
    1004.19 * Z

# FEI #
fei =
    1044.6 * X01 +
    365.5 * (X02 + X03) +
    361.85 * X04 +
    360.38 * X05 +
    1513.17 * X06 +
    291.67 * X07 +
    365.5 * X08 +
    372.81 * X09 +
    361.85 * X10 +
    353.07 * X11 +
    351.61 * X12 +
    365.5 * X13 +
    557.75 * X14 +
    300.45 * X15 +
    277.78 * X16 +
    358.19 * X17 +
    593.57 * X18 +
    304.83 * X19 +
    7.31 * X21 +
    79.68 * X22 +
    2.98 * P * M +
    0.42 * M +
    0.61 * Z +
    (
        4.87 * (X26 - X100 - X101) +
        3.79 * (X27 - X102 - X103) +
        2.04 * (X09 - X104 - X105) +
        2.09 * (X28 - X106 - X107) +
        3.79 * (X29 - X108 - X109) +
        3.02 * X113 +
        2.45 * X115 +
        1.89 * X117 +
        1.89 * X119 +
        1.70 * X121 +
        1.70 * X123 +
        1.81 * X152 +
        1.36 * X153 +
        1.39 * X154 +
        3.59 * X133 +
        4.34 * (X136 + X137) +
        9.89 * (X139 + X140 + X141) +
        7.06 * (X143 + X144 + X145) +
        4.24 * (X147 + X148 + X149) +
        2.22 * X19 +
        1.45 * X22
    ) * 7.31 +
    520.24 * Z

# LEI #
lei = 259.51 * M + 40.74 * Z + 365.77 * Z

# EI #
ei =
    1044.6 * X01 +
    365.5 * (X02 + X03) +
    361.85 * X04 +
    360.38 * X05 +
    1513.17 * X06 +
    291.67 * X07 +
    365.5 * X08 +
    372.81 * X09 +
    361.85 * X10 +
    353.07 * X11 +
    351.61 * X12 +
    365.5 * X13 +
    557.75 * X14 +
    300.45 * X15 +
    277.78 * X16 +
    358.19 * X17 +
    593.57 * X18 +
    304.83 * X19 +
    7.31 * X21 +
    79.68 * X22 +
    2.98 * P * M +
    0.42 * M +
    0.61 * Z +
    (
        4.87 * (X26 - X100 - X101) +
        3.79 * (X27 - X102 - X103) +
        2.04 * (X09 - X104 - X105) +
        2.09 * (X28 - X106 - X107) +
        3.79 * (X29 - X108 - X109) +
        3.02 * X113 +
        2.45 * X115 +
        1.89 * X117 +
        1.89 * X119 +
        1.70 * X121 +
        1.70 * X123 +
        1.81 * X152 +
        1.36 * X153 +
        1.39 * X154 +
        3.59 * X133 +
        4.34 * (X136 + X137) +
        9.89 * (X139 + X140 + X141) +
        7.06 * (X143 + X144 + X145) +
        4.24 * (X147 + X148 + X149) +
        2.22 * X19 +
        1.45 * X22
    ) * 7.31 +
    520.24 * Z +
    259.51 * M +
    40.74 * Z +
    365.77 * Z

# LABOUR #
labour =
    1044.6 * X01 +
    365.5 * (X02 + X03) +
    361.85 * X04 +
    360.38 * X05 +
    1513.17 * X06 +
    291.67 * X07 +
    365.5 * X08 +
    372.81 * X09 +
    361.85 * X10 +
    353.07 * X11 +
    351.61 * X12 +
    365.5 * X13 +
    557.75 * X14 +
    300.45 * X15 +
    277.78 * X16 +
    358.19 * X17 +
    593.57 * X18 +
    304.83 * X19 +
    7.31 * X21 +
    79.68 * X22 +
    2.98 * P * M +
    0.42 * M +
    0.61 * Z +
    (
        4.87 * (X26 - X100 - X101) +
        3.79 * (X27 - X102 - X103) +
        2.04 * (X09 - X104 - X105) +
        2.09 * (X28 - X106 - X107) +
        3.79 * (X29 - X108 - X109) +
        3.02 * X113 +
        2.45 * X115 +
        1.89 * X117 +
        1.89 * X119 +
        1.70 * X121 +
        1.70 * X123 +
        1.81 * X152 +
        1.36 * X153 +
        1.39 * X154 +
        3.59 * X133 +
        4.34 * (X136 + X137) +
        9.89 * (X139 + X140 + X141) +
        7.06 * (X143 + X144 + X145) +
        4.24 * (X147 + X148 + X149) +
        2.22 * X19 +
        1.45 * X22
    ) * 7.31 +
    259.51 * M +
    40.74 * Z

# EROI #
eroi =
    -(
        8474.95 * X01 +
        16039.8 * X02 +
        29143.53 * X02 +
        29875 * X03 +
        33591.75 * X03 +
        19546.60 * X23 +
        16099.97 * X24 +
        11504.48 * X25 +
        19662.24 * X23 +
        17895.40 * X24 +
        16274.44 * X25 +
        16493.4 * (0.5 * X23 - X68 - X69 - X70) +
        13142.7 * (0.5 * X24 - X72 - X73 - X74) +
        9792 * (0.5 * X25 - X76 - X77 - X78) +
        18397.72 * X26 +
        13802.23 * X27 +
        9206.73 * X09 +
        6599.98 * X28 +
        9899.98 * X29 +
        7569.41 * X152 +
        5473.78 * X153 +
        5636.4 * X154 +
        10067.4 * (X15 - X80 - X81 - X82) +
        10838.1 * X30 +
        8019.4 * X31 +
        5597.7 * X32 +
        27993.67 * X134 +
        6226.07 * X33 +
        4891.85 * X34 +
        2671.06 * X35 +
        27151.08 * (X19 - X136 - X137) +
        67431.2 * (X36 - X139 - X140 - X141) +
        50567.2 * (X37 - X143 - X144 - X145) +
        33715.6 * (X38 - X147 - X148 - X149) +
        46465.72 * (X23 - X94 - X95) +
        39129.11 * (X24 - X96 - X97) +
        29346.43 * (X25 - X98 - X99) +
        21446.68 * (0.5 * X23 - X49 - X50 - X51 - X52) +
        17103.25 * (0.5 * X24 - X53 - X54 - X55 - X56) +
        12759.82 * (0.5 * X25 - X57 - X58 - X59 - X60) +
        23057.55 * (0.5 * X23 - X112 - X113) +
        18734 * (0.5 * X24 - X114 - X115) +
        14410.56 * (0.5 * X25 - X116 - X117) +
        41898 * (X26 - X100 - X101) +
        32590.73 * (X27 - X102 - X103) +
        23278.88 * (X09 - X104 - X105) +
        7970.91 * (X10 - X61 - X62 - X63 - X64) +
        18310.29 * (X28 - X106 - X107) +
        25178.01 * (X29 - X108 - X109) +
        6871.23 * (X12 - X45 - X46 - X47 - X48) +
        17148.33 * (X12 - X110 - X111) +
        34419.91 * (X13 - X65 - X66 - X67) +
        14410.56 * (X15 - X118 - X119) +
        9285.19 * (X16 - X84 - X85 - X86) +
        12970.32 * (X16 - X120 - X121) +
        9682.63 * (X17 - X87 - X88 - X89) +
        12970.32 * (X17 - X122 - X123) +
        510.73 * Z
    ) / (
        (
            2828.20 * X01 +
            2297.75 * X04 +
            270.47 * X05 +
            1523.70 * X06 +
            1392.3 * X07 +
            23057.44 * X113 +
            18734 * X115 +
            14410.56 * X117 +
            2297.75 * X08 +
            2297.75 * X09 +
            175.01 * X10 +
            2194.81 * X11 +
            1377.38 * X12 +
            77.7 * X13 +
            805.73 * X14 +
            1468.22 * X152 +
            1101.17 * X153 +
            1129.39 * X154 +
            1129.39 * X125 +
            1086.3 * X15 +
            14410.56 * X119 +
            1606.32 * X16 +
            12970.32 * X121 +
            1208.88 * X17 +
            12970.32 * X123 +
            27993.67 * X133 +
            9355.13 * X19 +
            27151.08 * (X136 + X137) +
            67431.2 * (X139 + X140 + X141) +
            50567.2 * (X143 + X144 + X145) +
            33715.6 * (X147 + X148 + X149) +
            18981.19 * X01 +
            46465.72 * (X94 + X95) +
            39129.11 * (X96 + X97) +
            29346.43 * (X98 + X99) +
            16445.21 * X23 +
            13156.01 * X24 +
            9867.6 * X25 +
            21446.68 * (X49 + X50 + X51 + X52) +
            17103.25 * (X53 + X54 + X55 + X56) +
            12759.82 * (X57 + X58 + X59 + X60) +
            23397.26 * X23 +
            21447.36 * X24 +
            19497.46 * X25 +
            16493.4 * (X68 + X69 + X70) +
            13142.7 * (X72 + X73 + X74) +
            9792 * (X76 + X77 + X78) +
            23057.44 * X112 +
            18734 * X115 +
            14410.56 * X116 +
            41898 * (X100 + X101) +
            32590.73 * (X102 + X103) +
            23278.88 * (X104 + X105) +
            12331.55 * X10 +
            7970.91 * (X61 + X62 + X63 + X64) +
            18310.29 * (X106 + X107) +
            25178.01 * (X108 + X109) +
            6871.23 * (X45 + X46 + X47 + X48) +
            17148.33 * (X110 + X111) +
            34419.91 * (X65 + X66 + X67) +
            10067.4 * (X80 + X81 + X82) +
            14410.56 * X118 +
            9285.19 * (X84 + X85 + X86) +
            12970.32 * X120 +
            9682.63 * (X87 + X88 + X89) +
            12970.32 * X122 +
            11250.08 * X30 +
            8253.26 * X31 +
            5809.91 * X32 +
            15908.64 * X30 +
            11784.96 * X31 +
            8248.68 * X32 +
            8076.36 * X33 +
            6345.14 * X34 +
            3461.55 * X35 +
            26997.48 * X21 +
            3737.6 * X22 +
            10417.32 * X22
        ) + (
            1044.6 * X01 +
            365.5 * (X02 + X03) +
            361.85 * X04 +
            360.38 * X05 +
            1513.17 * X06 +
            291.67 * X07 +
            365.5 * X08 +
            372.81 * X09 +
            361.85 * X10 +
            353.07 * X11 +
            351.61 * X12 +
            365.5 * X13 +
            557.75 * X14 +
            300.45 * X15 +
            277.78 * X16 +
            358.19 * X17 +
            593.57 * X18 +
            304.83 * X19 +
            7.31 * X21 +
            79.68 * X22 +
            2.98 * P * M +
            0.42 * M +
            0.61 * Z +
            (
                4.87 * (X26 - X100 - X101) +
                3.79 * (X27 - X102 - X103) +
                2.04 * (X09 - X104 - X105) +
                2.09 * (X28 - X106 - X107) +
                3.79 * (X29 - X108 - X109) +
                3.02 * X113 +
                2.45 * X115 +
                1.89 * X117 +
                1.89 * X119 +
                1.70 * X121 +
                1.70 * X123 +
                1.81 * X152 +
                1.36 * X153 +
                1.39 * X154 +
                3.59 * X133 +
                4.34 * (X136 + X137) +
                9.89 * (X139 + X140 + X141) +
                7.06 * (X143 + X144 + X145) +
                4.24 * (X147 + X148 + X149) +
                2.22 * X19 +
                1.45 * X22
            ) * 7.31 +
            520.24 * Z +
            259.51 * M +
            40.74 * Z +
            365.77 * Z
        )
    )

# FALLOWS #
crops = X01 + X02 + X03
irrigated_land = X04 + X06
dry_croplands = X08 + X29 + X13 + X15 + X16
dry_olive_groves = X09 + X10 + X28 + X12 + X14 + X17

# QUALITIES #
q1 = X01 + X02 + X03 + 2 * X23 + X26 + X09 + X14 + X15 + X33 + X36
q2 = 2 * X24 + X27 + X10 + X28 + X13 + X34 + X37
q3 = 2 * X25 + X29 + X12 + X16 + X17 + X35 + X38 + X21

# PARAMETERS #
code_m =
    X01 +
    X02 +
    X03 +
    X04 +
    X06 +
    X08 +
    X09 +
    X10 +
    X11 +
    X12 +
    X13 +
    X14 +
    X15 +
    X16 +
    X17 +
    X19

value_d = (9162.10 * X91 + 3535.31 * X93) * 365 / (19076.26 * M)
